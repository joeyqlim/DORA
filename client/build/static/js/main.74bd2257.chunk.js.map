{"version":3,"sources":["assets/globe.png","assets/compass.png","assets/location.png","actions/userActions.js","components/Navbar.jsx","components/Footer.jsx","pages/LandingPage.jsx","components/Board.jsx","components/Spinner.jsx","pages/BoardsPage.js","actions/boardsActions.js","components/CardComponent.jsx","components/List.jsx","components/BoardDetail.jsx","actions/oneBoardActions.js","pages/AddBoardPage.jsx","pages/EditBoardPage.jsx","pages/AddListPage.jsx","pages/EditListPage.jsx","pages/AddCardPage.jsx","pages/EditCardPage.jsx","components/LoginComponent.jsx","components/RegisterComponent.jsx","components/AuthRoute.jsx","App.js","reducers/boardsReducer.js","reducers/userReducer.js","reducers/oneBoardReducer.js","reducers/index.js","index.js"],"names":["module","exports","URL","process","setUser","payload","type","Navbar","state","activeItem","handleItemClick","e","name","setState","logoutHandler","preventDefault","props","logUserOut","document","addEventListener","navColor","window","scrollY","this","Segment","Menu","fixed","inverted","size","style","backgroundColor","Item","userReducer","loggedIn","as","NavLink","to","active","onClick","Component","connect","dispatch","Footer","vertical","margin","padding","Container","textAlign","Grid","divided","stackable","Column","width","Header","content","role","aria-label","List","horizontal","link","href","Icon","LandingPage","color","container","verticalAlign","centered","Row","fontSize","Button","marginTop","Link","pathname","Board","board","Card","Content","Divider","description","Group","boardId","_id","Spinner","Dimmer","Loader","inline","loading","boards","hasErrors","useEffect","a","token","localStorage","getItem","axios","get","headers","response","console","log","data","allBoards","marginBottom","user","username","itemsPerRow","map","i","key","CardComponent","card","Popup","trigger","circular","height","marginLeft","flowing","hoverable","columns","icon","list","raised","fluid","title","floated","widths","listId","hidden","cards","oneBoard","useParams","fetchOneBoard","padded","lists","length","AddBoardPage","status","changeHandler","target","value","submitHandler","post","then","res","catch","err","className","Image","src","globeImg","Form","onSubmit","Field","placeholder","onChange","EditBoardPage","location","put","AddListPage","match","params","compassImg","EditListPage","AddCardPage","locationImg","EditCardPage","cardId","LoginComponent","email","password","handleOnChange","persist","fetchUser","React","userInfo","setItem","SignUpComponent","confirmPassword","signUserUp","App","autoLogin","exact","path","component","RegisterComponent","maxWidth","BoardsPage","BoardDetail","render","decode","removeItem","initialState","defaultState","action","clear","rootReducer","combineReducers","listsReducer","cardsReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","getElementById"],"mappings":"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","file":"static/js/main.74bd2257.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/globe.8f0a9e9e.png\";","module.exports = __webpack_public_path__ + \"static/media/compass.854c4be8.png\";","module.exports = __webpack_public_path__ + \"static/media/location.5e5d2957.png\";","import axios from 'axios';\nimport { decode } from \"jsonwebtoken\";\n\nconst URL = process.env.REACT_APP_URL;\n\n// Create Redux action creators\nexport const setUser = (payload) => ({ type: \"SET_USER\", payload });\nexport const logUserOut = () => ({ type: \"LOG_OUT\" });\n\n// Create Redux methods\n// log in\nexport const fetchUser = (userInfo) => dispatch => {\n  axios.post(`${URL}/auth/login`, userInfo)\n  .then((res) =>{\n    //console.log(res.data);\n    \n\n    localStorage.setItem(\"token\", res.data.token)\n    dispatch(setUser(res.data.user))\n  })\n}\n\n// register\nexport const signUserUp = (userInfo) => dispatch => {\n  axios.post(`${URL}/auth/register`, userInfo)\n  .then((res) =>{\n    console.log(res.data);\n\n    localStorage.setItem(\"token\", res.data.token)\n    dispatch(setUser(res.data.user))\n  })\n}\n\n// auto login if token exists\nexport const autoLogin = () => dispatch => {\n  let token = localStorage.getItem(\"token\");\n\n    // if token exists\n    if (!(token == null)) {\n      let decodedToken = decode(token);\n\n      if (!decodedToken) {\n        localStorage.removeItem(\"token\");\n      } else {\n        \n        axios.get(`${URL}/auth/autologin`, {\n          headers: {\n            \"x-auth-token\": token,\n          },\n        })\n          .then((res) => {\n            console.log(res.data);\n            dispatch(setUser(res.data.user))\n          })\n          .catch((err) => {\n            console.log(err);\n            \n          });\n        \n      }\n    }\n}\n\n","import React, { Component } from 'react'\nimport { Menu, Segment } from 'semantic-ui-react'\nimport { NavLink } from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {logUserOut} from '../actions/userActions'\n\n\nclass Navbar extends Component {\n  state = { activeItem: '' }\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  logoutHandler = (e) => {\n    e.preventDefault()\n    this.props.logUserOut()\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"scroll\", () => {\n      const navColor = window.scrollY > 33 ? \"rgb(0, 0, 0, .6)\" : \"rgb(0, 0, 0, 1)\";\n\n      this.setState({ navColor });\n    });\n  }\n  \n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <Segment>\n        <Menu fixed='top' inverted size='massive' style={{ backgroundColor: this.state.navColor}} >\n          <Menu.Item>DORA</Menu.Item>\n          {!this.props.userReducer.loggedIn ?  \n          <Menu.Item\n          as={NavLink} to=\"/login\"\n          name='log in'\n          active={activeItem === 'log in'}\n          onClick={this.handleItemClick}\n        />\n        : \n          <Menu.Item\n          as={NavLink} to=\"/home\"\n          name='home'\n          active={activeItem === 'home'}\n          onClick={this.handleItemClick}\n          />\n          }\n\n          {!this.props.userReducer.loggedIn ?  \n          <Menu.Item\n          as={NavLink} to=\"/register\"\n          name='register'\n          active={activeItem === 'register'}\n          onClick={this.handleItemClick}\n        />\n          : \n          <Menu.Item\n          as={NavLink} to=\"/logout\"\n          name='logout'\n          active={activeItem === 'logout'}\n          onClick={this.logoutHandler}\n          />\n          }\n          \n        </Menu>\n      </Segment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userReducer: state.userReducer\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      logUserOut: () => dispatch(logUserOut())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","import React from 'react'\nimport {\n  Container,\n  Grid,\n  Header,\n  List,\n  Segment,\n  Icon\n} from 'semantic-ui-react'\n\nconst Footer = () => (\n  <div>\n    <Segment inverted vertical style={{ margin: '15em 0em 0em', padding: '2em 0em', backgroundColor: 'rgba(0, 0, 0, .6)'}}>\n      <Container textAlign='center'>\n        <Grid divided inverted stackable>\n          \n          <Grid.Column width={16}>\n            <Header inverted as='h4' content='DORA' />\n            <p>\n              made for explorers <span role=\"img\" aria-label=\"white-heart\">🤍</span>\n            </p>\n          </Grid.Column>\n        </Grid>\n\n        <List horizontal inverted divided link size='small'>\n          <List.Item as='a' href='https://github.com/joeyqlim/'>\n            <Icon name='github' size='big' />\n          </List.Item>\n        </List>\n      </Container>\n    </Segment>\n  </div>\n)\n\nexport default Footer","import React from 'react'\nimport { Header, Segment, Button, Grid } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\n\nconst LandingPage = () => (\n  <Segment style={{ padding: '1em 0em', color: \"white\" }} vertical>\n      <Grid container stackable verticalAlign='middle' centered >\n        <Grid.Row>\n          <Grid.Column width={8} textAlign=\"center\">\n            <Header as='h1' style={{ fontSize: '6em', color: \"white\" }} >\n              DORA\n            </Header>\n            <p style={{ fontSize: '1.5em' }}>\n              A travel planner app for the flexible, yet organized traveler.\n            </p>\n            <Header as='h3' style={{ fontSize: '2em', color: \"white\" }}>\n              Itinerary Planning Can Be Fun\n            </Header>\n            <Header as='h3' style={{ fontSize: '2em', color: \"white\" }}>\n              You Don't Have To Use Excel Spreadsheets\n            </Header>\n            <Header as='h3' style={{ fontSize: '2em', color: \"white\" }}>\n              Visualize Your Hopes And Dreams Today\n            </Header>\n          </Grid.Column>\n          {/* <Grid.Column floated='right' width={6}>\n            <Image bordered rounded size='large' src='/images/wireframe/white-image.png' />\n          </Grid.Column> */}\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column textAlign='center'>\n            <Button size='huge' color=\"pink\" style={{marginTop: \"1em\"}} as={Link} to={{\n              pathname: `/login`\n              }}>I'm ready to explore the world</Button>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n)\n\nexport default LandingPage","import React from 'react'\nimport { Card, Button, Icon, Divider } from 'semantic-ui-react'\nimport { Link } from \"react-router-dom\";\n\n\nexport const Board = ({ board }) => (\n  <Card>\n    <Card.Content textAlign=\"center\" >\n      <Card.Header content={board.name} />\n      <Divider />\n      <p>{board.description}</p>\n\n    </Card.Content>\n    <Button.Group>\n      <Button color='violet'>\n        <Link \n          to={{\n            pathname: `/editboard`,\n            state: {\n              name: board.name,\n              boardId: board._id,\n              description: board.description,\n            }\n            }}>\n        Edit <Icon name='edit' />\n        </Link>\n      </Button>\n      <Button color='teal'><Link to={`/board/${board._id}`}>View <Icon name='eye' /></Link></Button>\n    </Button.Group>\n  </Card>\n  \n  \n)","import React from 'react'\nimport { Dimmer, Loader } from 'semantic-ui-react'\n\nconst Spinner = () => (\n  <div>\n    <Dimmer active inverted>\n      <Loader size='medium' inline='centered'>Loading</Loader>\n    </Dimmer>\n  </div>\n)\n\nexport default Spinner","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\n\nimport { fetchBoards } from '../actions/boardsActions';\nimport { Board } from '../components/Board';\nimport Spinner from '../components/Spinner';\n\nimport { Card, Container, Divider, Icon, Button } from 'semantic-ui-react'\n\nconst BoardsPage = ({ dispatch, loading, boards, hasErrors, userReducer }) => {\n  useEffect(() => {\n    dispatch(fetchBoards())\n  }, [dispatch]);\n\n  // Show loading, error or success state\n  const renderBoards = () => {\n    if (loading) return <Spinner />\n    if (hasErrors) return <p>Unable to display boards</p>\n    return boards.map((board, i) => <Board key={i} board={board} />)\n  }\n\n  return (\n    <Container style={{ marginBottom: '3em' }}>\n    {!userReducer.loggedIn ? \"\" : <h1><span role=\"img\" aria-label=\"wave\">👋</span> Welcome, {userReducer.user.username}!</h1>}\n      <Card.Group itemsPerRow={3}>\n        {renderBoards()}\n        <Card>\n        <Card.Content textAlign=\"center\" >\n          <Card.Header content=\"New board\" />\n          <Divider />\n          <span role=\"img\" aria-label=\"sparkle\">✨</span>\n        </Card.Content>\n        <Button color='green'><Link to=\"/addboard\">Add Board <Icon name='add' /></Link></Button>\n      </Card>\n      </Card.Group>\n    </Container>\n  )\n}\n\n// Map Redux state to React component props\nconst mapStateToProps = (state) => ({\n  loading: state.boards.loading,\n  boards: state.boards.boards,\n  hasErrors: state.boards.hasErrors,\n  userReducer: state.userReducer\n})\n\nexport default connect(mapStateToProps)(BoardsPage)","import axios from 'axios';\n\nconst URL = process.env.REACT_APP_URL;\n\n// Create Redux action types\nexport const GET_BOARDS = 'GET_BOARDS'\nexport const GET_BOARDS_SUCCESS = 'GET_BOARDS_SUCCESS'\nexport const GET_BOARDS_FAILURE = 'GET_BOARDS_FAILURE'\n\n// Create Redux action creators that return an action\nexport const getBoards = () => ({\n  type: GET_BOARDS,\n})\n\nexport const getBoardsSuccess = (boards) => ({\n  type: GET_BOARDS_SUCCESS,\n  payload: boards,\n})\n\nexport const getBoardsFailure = () => ({\n  type: GET_BOARDS_FAILURE,\n})\n\n// fetch all boards\nexport function fetchBoards() {\n  return async (dispatch) => {\n    dispatch(getBoards());\n    let token = localStorage.getItem(\"token\");\n\n    try {\n      const response = await axios.get(`${URL}/board/all`, {\n        headers: {\n          'x-auth-token' : token\n        }\n      });\n      console.log(response.data)\n\n      dispatch(getBoardsSuccess(response.data.allBoards.boards));\n\n    } catch (error) {\n      dispatch(getBoardsFailure());\n    }\n  }\n}\n","import React from 'react';\nimport { Segment, Button, Popup, Grid } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\n\nfunction CardComponent({card, boardId}) {\n  const square = { width: 135, height: 135, marginLeft: \"1em\" }\n  return (  \n\n    <Popup trigger={\n      <Segment circular style={square} inverted color='teal'>\n      {card.content}<br />\n      </Segment>\n    } flowing hoverable size='mini'>\n    <Grid centered divided columns={2}>\n      <Grid.Column textAlign='center'>\n        <Button color=\"blue\" icon=\"edit\" size='mini' as={Link} \n        to={{\n          pathname: `/editcard/${card._id}`,\n          state: {\n            content: card.content,\n            boardId\n          }\n          }}/>\n      </Grid.Column>\n      <Grid.Column textAlign='center'>\n        <Button color=\"red\" icon=\"delete\" size='mini' />\n      </Grid.Column>\n    </Grid>\n    </Popup>\n  );\n}\n\nexport default CardComponent;\n","import React from 'react';\nimport { Card, Segment, Divider, Icon, Button, Popup } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\n\nimport CardComponent from './CardComponent'\n\nfunction List({list}) {\n  const square = { width: 135, height: 135, marginTop: \"1em\", marginBottom: \"1.5em\", marginLeft: \"1.5em\" }\n\n  const renderLists = () => {\n    return list.cards.map((card, i) => (\n      <CardComponent key={i} card={card} boardId={list.board}/>\n    ))\n  }\n  return (\n      <>\n      <Segment color='purple' raised fluid style={{ padding: '1em' }}>\n        <h3>{list.title}</h3> \n        <Button.Group floated='right' vertical widths='1'>\n        <Popup content='Delete this list' trigger={<Button color='red' icon='delete' />} />\n        <Popup content='Edit this list' trigger={\n          <Button \n            color='blue' \n            icon='edit'\n            as={Link} \n            to={{\n              pathname: `/editlist`,\n              state: {\n                title: list.title,\n                boardId: list.board,\n                listId: list._id\n              }\n              }}\n            />\n            } />\n\n      </Button.Group>\n        <Divider hidden />\n          <Card.Group itemsPerRow={6}>\n          <Segment circular style={square} inverted color='purple' as={Link} \n            to={{\n              pathname: `/addcard/${list.board}/${list._id}`\n              }}>\n            Add an activity<br/><Icon name='add' />\n          </Segment>\n          {renderLists()}\n          </Card.Group>\n      </Segment>      \n      <Divider />\n      </>\n  );\n}\n\nexport default List;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams, Link } from 'react-router-dom';\nimport { Grid, Card, Container, Button, Icon } from 'semantic-ui-react'\nimport { fetchOneBoard } from '../actions/oneBoardActions';\n\nimport List from './List';\n\nconst BoardDetail = ({ dispatch, loading, board, hasErrors }) => {\n  const { boardId } = useParams();\n  useEffect(() => {\n    dispatch(fetchOneBoard(boardId))\n  }, [dispatch, boardId]);\n\n  // Show loading, error or success state\n  const renderBoardDetail = () => {\n    if (loading) return <p>Loading boards...</p>\n    if (hasErrors) return <p>Unable to display boards</p>\n    if (board.lists) {\n      if (board.lists.length > 0) {\n        return board.lists.map((list, i) => (\n          <List key={i} list={list} />\n        ))\n      } else {\n        return <h3>No lists in this board yet. Create one?</h3>\n      }\n    } \n  }\n\n  // fetch all lists in this board\n  // render each list into a list component\n  return (\n    <Grid padded divided='vertically' style={{ margin: '.1em .1em 3em .1em' }}>\n      <h2>{board.name}</h2>\n      <Container>\n      <Grid.Row>\n      {renderBoardDetail()}\n      <Card fluid={true}>\n        <Card.Content textAlign=\"center\" >\n          <Card.Header content=\"Add a new list to this board\" />\n        </Card.Content>\n        <Button color='green'><Link to={`/addlist/${board._id}`}>Add List <Icon name='add' /></Link></Button>\n      </Card>\n      </Grid.Row>\n    </Container>\n    </Grid>\n  );\n}\n\n// Map Redux state to React component props\nconst mapStateToProps = (state) => ({\n  loading: state.oneBoard.loading,\n  board: state.oneBoard.board,\n  hasErrors: state.oneBoard.hasErrors,\n  userReducer: state.userReducer\n})\n\nexport default connect(mapStateToProps)(BoardDetail);\n","import axios from 'axios';\n\nconst URL = process.env.REACT_APP_URL;\n\nexport const GET_ONE_BOARD = 'GET_ONE_BOARD'\nexport const GET_ONE_BOARD_SUCCESS = 'GET_ONE_BOARD_SUCCESS'\nexport const GET_ONE_BOARD_FAILURE = 'GET_ONE_BOARD_FAILURE'\n\nexport const getOneBoard = () => ({\n  type: GET_ONE_BOARD,\n})\n\nexport const getOneBoardSuccess = (board) => ({\n  type: GET_ONE_BOARD_SUCCESS,\n  payload: board,\n})\n\nexport const getOneBoardFailure = () => ({\n  type: GET_ONE_BOARD_FAILURE,\n})\n\n// fetch one board\nexport function fetchOneBoard(boardId) {\n  return async (dispatch) => {\n    dispatch(getOneBoard());\n    let token = localStorage.getItem(\"token\");\n\n    try {\n      const response = await axios.get(`${URL}/board/${boardId}`, {\n        headers: {\n          'x-auth-token' : token\n        }\n      });\n      console.log(response.data.board)\n\n      dispatch(getOneBoardSuccess(response.data.board));\n\n    } catch (error) {\n      dispatch(getOneBoardFailure());\n    }\n  }\n}","import React, { Component } from \"react\";\nimport globeImg from '../assets/globe.png'\nimport { Container, Form, Button, Grid, Image } from 'semantic-ui-react'\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst URL = process.env.REACT_APP_URL;\nclass AddBoardPage extends Component {\n  state = {\n    name: \"\",\n    description: \"\",\n    status: false,\n  };\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = () => {\n    let token = localStorage.getItem(\"token\");\n\n    axios.post(`${URL}/board/new`, this.state, {\n      headers: {\n        'x-auth-token' : token\n      }\n    })\n      .then((res) => {\n        console.log(\"done\");\n        this.setState({ status: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    if (this.state.status) {\n      return <Redirect to=\"/home\" />;\n    }\n\n    return (\n      <Container>\n      <Grid className=\"centered\">\n      <Grid.Row>\n        <Grid.Column width={4}>\n          <Image size=\"medium\" src={globeImg}/>\n        </Grid.Column>\n        <Grid.Column width={1}>\n        </Grid.Column>\n        <Grid.Column width={5}>\n          <h1>New Board</h1>\n          <Form onSubmit={this.submitHandler}>\n            <Form.Field>\n            <input \n                type=\"text\" \n                name=\"name\" \n                placeholder=\"Board name\" \n                value={this.state.name}\n                onChange={this.changeHandler}\n            />\n            </Form.Field>\n\n            <Form.Field>\n            <input\n                type=\"text\"\n                name=\"description\"\n                placeholder=\"Description\"\n                value={this.state.description}\n                onChange={this.changeHandler}\n            />\n            </Form.Field>\n            <Button type=\"submit\" color=\"olive\">Create new board</Button>  \n          </Form>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n    </Container>\n    );\n  }\n}\n\nexport default AddBoardPage;","import React, { Component } from \"react\";\nimport globeImg from '../assets/globe.png'\nimport { Container, Form, Button, Grid, Image } from 'semantic-ui-react'\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst URL = process.env.REACT_APP_URL;\nclass EditBoardPage extends Component {\n  state = {\n    name: this.props.location.state.name,\n    boardId: this.props.location.state.boardId,\n    description: this.props.location.state.description,\n    status: false,\n  };\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = () => {\n    let token = localStorage.getItem(\"token\");\n\n    axios.put(`${URL}/board/${this.state.boardId}`, this.state, {\n      headers: {\n        'x-auth-token' : token\n      }\n    })\n      .then((res) => {\n        console.log(\"done\");\n        this.setState({ status: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    if (this.state.status) {\n      return <Redirect to=\"/home\" />;\n    }\n\n    return (\n      <Container>\n      <Grid className=\"centered\">\n      <Grid.Row>\n        <Grid.Column width={4}>\n          <Image size=\"medium\" src={globeImg}/>\n        </Grid.Column>\n        <Grid.Column width={1}>\n        </Grid.Column>\n        <Grid.Column width={5}>\n          <h1>Edit Board</h1>\n          <Form onSubmit={this.submitHandler}>\n            <Form.Field>\n            <input \n                type=\"text\" \n                name=\"name\" \n                placeholder=\"Board name\" \n                value={this.state.name}\n                onChange={this.changeHandler}\n            />\n            </Form.Field>\n\n            <Form.Field>\n            <input\n                type=\"text\"\n                name=\"description\"\n                placeholder=\"Description\"\n                value={this.state.description}\n                onChange={this.changeHandler}\n            />\n            </Form.Field>\n            <Button type=\"submit\" color=\"olive\">Save changes</Button>  \n          </Form>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n    </Container>\n    );\n  }\n}\n\nexport default EditBoardPage;","import React, { Component } from \"react\";\nimport compassImg from '../assets/compass.png'\nimport { Container, Form, Button, Grid, Image } from 'semantic-ui-react'\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst URL = process.env.REACT_APP_URL;\nclass AddListPage extends Component {\n  state = {\n    title: \"\",\n    status: false,\n  };\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = () => {\n    let token = localStorage.getItem(\"token\");\n\n    axios.post(`${URL}/list/${this.props.match.params.boardId}/new`, this.state, {\n      headers: {\n        'x-auth-token' : token\n      }\n    })\n      .then((res) => {\n        console.log(\"done\");\n        this.setState({ status: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    if (this.state.status) {\n      return <Redirect to={`/board/${this.props.match.params.boardId}`} />;\n    }\n    console.log(this.props.match.params.boardId)\n\n    return (\n      <Container>\n      <Grid className=\"centered\">\n      <Grid.Row>\n        <Grid.Column width={4}>\n          <Image size=\"medium\" src={compassImg}/>\n        </Grid.Column>\n        <Grid.Column width={1}>\n        </Grid.Column>\n        <Grid.Column width={5}>\n          <h1>New List</h1>\n          <Form onSubmit={this.submitHandler}>\n            <Form.Field>\n            <input \n                type=\"text\" \n                name=\"title\" \n                placeholder=\"List title\" \n                value={this.state.title}\n                onChange={this.changeHandler}\n            />\n            </Form.Field>\n\n            <Button type=\"submit\">Add list to board</Button>  \n          </Form>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n    </Container>\n    );\n  }\n}\n\nexport default AddListPage;","import React, { Component } from \"react\";\nimport compassImg from '../assets/compass.png'\nimport { Container, Form, Button, Grid, Image } from 'semantic-ui-react'\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst URL = process.env.REACT_APP_URL;\nclass EditListPage extends Component {\n  state = {\n    title: this.props.location.state.title,\n    boardId: this.props.location.state.boardId,\n    listId: this.props.location.state.listId,\n    status: false,\n  };\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = () => {\n    let token = localStorage.getItem(\"token\");\n\n    axios.put(`${URL}/list/${this.state.listId}`, this.state, {\n      headers: {\n        'x-auth-token' : token\n      }\n    })\n      .then((res) => {\n        console.log(\"done\");\n        this.setState({ status: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    if (this.state.status) {\n      return <Redirect to={`/board/${this.state.boardId}`} />;\n    }\n\n    return (\n      <Container>\n      <Grid className=\"centered\">\n      <Grid.Row>\n        <Grid.Column width={4}>\n          <Image size=\"medium\" src={compassImg}/>\n        </Grid.Column>\n        <Grid.Column width={1}>\n        </Grid.Column>\n        <Grid.Column width={5}>\n          <h1>Edit List</h1>\n          <Form onSubmit={this.submitHandler}>\n            <Form.Field>\n            <input \n                type=\"text\" \n                name=\"title\" \n                placeholder=\"List title\" \n                value={this.state.title}\n                onChange={this.changeHandler}\n            />\n            </Form.Field>\n\n            <Button type=\"submit\" color=\"olive\">Save changes</Button>  \n          </Form>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n    </Container>\n    );\n  }\n}\n\nexport default EditListPage;","import React, { Component } from \"react\";\nimport locationImg from '../assets/location.png'\nimport { Container, Form, Button, Grid, Image } from 'semantic-ui-react'\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst URL = process.env.REACT_APP_URL;\nclass AddCardPage extends Component {\n  state = {\n    content: \"\",\n    status: false,\n  };\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = () => {\n    let token = localStorage.getItem(\"token\");\n\n    axios.post(`${URL}/card/${this.props.match.params.listId}/new`, this.state, {\n      headers: {\n        'x-auth-token' : token\n      }\n    })\n      .then((res) => {\n        console.log(\"done\");\n        this.setState({ status: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    if (this.state.status) {\n      return <Redirect to={`/board/${this.props.match.params.boardId}`} />;\n    }\n    console.log(this.props)\n\n    return (\n      <Container>\n      <Grid className=\"centered\">\n      <Grid.Row>\n        <Grid.Column width={4}>\n          <Image size=\"medium\" src={locationImg}/>\n        </Grid.Column>\n        <Grid.Column width={1}>\n        </Grid.Column>\n        <Grid.Column width={5}>\n          <h1>New Card</h1>\n          <Form onSubmit={this.submitHandler}>\n            <Form.Field>\n            <input \n                type=\"text\" \n                name=\"content\" \n                placeholder=\"Content\" \n                value={this.state.content}\n                onChange={this.changeHandler}\n            />\n            </Form.Field>\n\n            <Button type=\"submit\" color=\"olive\">Add card to list</Button>  \n          </Form>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n    </Container>\n    );\n  }\n}\n\nexport default AddCardPage;","import React, { Component } from \"react\";\nimport locationImg from '../assets/location.png'\nimport { Container, Form, Button, Grid, Image } from 'semantic-ui-react'\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst URL = process.env.REACT_APP_URL;\nclass EditCardPage extends Component {\n  state = {\n    content: this.props.location.state.content,\n    boardId: this.props.location.state.boardId,\n    status: false,\n  };\n  \n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = () => {\n    let token = localStorage.getItem(\"token\");\n\n    axios.put(`${URL}/card/${this.props.match.params.cardId}`, this.state, {\n      headers: {\n        'x-auth-token' : token\n      }\n    })\n      .then((res) => {\n        console.log(\"done\");\n        this.setState({ status: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    if (this.state.status) {\n      return <Redirect to={`/board/${this.state.boardId}`} />;\n    }\n\n    return (\n      <Container>\n      <Grid className=\"centered\">\n      <Grid.Row>\n        <Grid.Column width={4}>\n          <Image size=\"medium\" src={locationImg}/>\n        </Grid.Column>\n        <Grid.Column width={1}>\n        </Grid.Column>\n        <Grid.Column width={5}>\n          <h1>New Card</h1>\n          <Form onSubmit={this.submitHandler}>\n            <Form.Field>\n            <input \n                type=\"text\" \n                name=\"content\" \n                placeholder=\"Content\" \n                value={this.state.content}\n                onChange={this.changeHandler}\n            />\n            </Form.Field>\n\n            <Button type=\"submit\" color=\"olive\">Add card to list</Button>  \n          </Form>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n    </Container>\n    );\n  }\n}\n\nexport default EditCardPage;","import React from 'react'\nimport {connect} from 'react-redux'\nimport {fetchUser} from '../actions/userActions'\n\nimport { Container, Form, Button, Grid } from 'semantic-ui-react'\n\nclass LoginComponent extends React.Component {\n    state = {\n        email: \"\",\n        password: \"\"\n    }\n\n    handleOnChange = (e) => {\n        e.persist();\n        this.setState(() => ({\n            [e.target.name]: e.target.value \n        }))\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        this.props.fetchUser(this.state)\n    }\n\n    render(){\n        return(\n            <Container>\n                <Grid className=\"centered\">\n                <Grid.Row>\n                    <Grid.Column width={5}>\n                        <h1 style={{ color: \"white\"}}>Log In</h1>\n                        <Form onSubmit={this.onSubmit}>\n                            <Form.Field>\n                            <input \n                                type=\"text\" \n                                name=\"email\" \n                                placeholder=\"Email\" \n                                value={this.state.email}\n                                onChange={this.handleOnChange}\n                            />\n                            </Form.Field>\n\n                            <Form.Field>\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                value={this.state.password}\n                                onChange={this.handleOnChange}\n                            />\n                            </Form.Field>\n                            <Button type=\"submit\" inverted floated=\"right\">Log In</Button>\n                            \n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            </Container>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchUser: (userInfo) => dispatch(fetchUser(userInfo))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(LoginComponent)","import React from 'react'\nimport {connect} from 'react-redux'\nimport {signUserUp} from '../actions/userActions'\n\nimport { Container, Form, Button, Grid } from 'semantic-ui-react'\n\nclass SignUpComponent extends React.Component {\n    state = {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n    }\n\n    handleOnChange = (e) => {\n        e.persist();\n        this.setState(() => ({\n            [e.target.name]: e.target.value \n        }))\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        this.props.signUserUp(this.state)\n    }\n\n    render(){\n        return(\n            <Container>\n                <Grid className=\"centered\">\n                <Grid.Row>\n                    <Grid.Column width={5}>\n                        <h1 style={{ color: \"white\"}}>Register</h1>\n                        <Form onSubmit={this.onSubmit}>\n                            <Form.Field>\n                            <input \n                                type=\"text\" \n                                name=\"username\" \n                                placeholder=\"Username\" \n                                value={this.state.username}\n                                onChange={this.handleOnChange}\n                            />\n                            </Form.Field>\n\n                            <Form.Field>\n                            <input \n                                type=\"text\" \n                                name=\"email\" \n                                placeholder=\"Email\" \n                                value={this.state.email}\n                                onChange={this.handleOnChange}\n                            />\n                            </Form.Field>\n\n                            <Form.Field>\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                value={this.state.password}\n                                onChange={this.handleOnChange}\n                            />\n                            </Form.Field>\n\n                            <Form.Field>\n                            <input\n                                type=\"password\"\n                                name=\"confirmPassword\"\n                                placeholder=\"Confirm Password\"\n                                value={this.state.confirmPassword}\n                                onChange={this.handleOnChange}\n                            />\n                            </Form.Field>\n                            <Button type=\"submit\" inverted floated=\"right\">Register</Button>\n                            \n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            </Container>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUserUp: (userInfo) => dispatch(signUserUp(userInfo))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignUpComponent)","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\n\nconst AuthRoute = props => {\n  const { userReducer, type } = props;\n  //console.log(props)\n  if (type === \"guest\" && userReducer.loggedIn) {\n    return <Redirect to=\"/home\" />;\n  } else if (type === \"private\" && !userReducer.loggedIn) {\n    return <Redirect to=\"/login\" />;\n  } \n\n  return <Route {...props} />;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    userReducer: state.userReducer\n  }\n}\n\nexport default connect(mapStateToProps)(AuthRoute);","import React, { Component } from 'react'\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nimport Navbar from './components/Navbar'\nimport Footer from './components/Footer'\nimport LandingPage from './pages/LandingPage'\nimport BoardsPage from './pages/BoardsPage'\nimport BoardDetail from './components/BoardDetail'\nimport AddBoardPage from './pages/AddBoardPage'\nimport EditBoardPage from './pages/EditBoardPage'\nimport AddListPage from './pages/AddListPage'\nimport EditListPage from './pages/EditListPage'\nimport AddCardPage from './pages/AddCardPage'\nimport EditCardPage from './pages/EditCardPage'\nimport LoginComponent from './components/LoginComponent'\nimport RegisterComponent from './components/RegisterComponent'\nimport AuthRoute from './components/AuthRoute'\nimport {autoLogin} from './actions/userActions'\n\nimport { Container, Segment } from 'semantic-ui-react'\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.autoLogin();\n  }\n\n  render() {\n    return (\n      <Router>\n        <Navbar />\n        <Container style={{ marginBottom: '12em', marginTop: '8em' }}>\n        <Switch>\n          <Route exact path=\"/\" component={LandingPage} />\n          {/* <AuthRoute exact path=\"/\" type=\"guest\">\n            <LoginComponent />\n          </AuthRoute> */}\n          <AuthRoute exact path=\"/login\" type=\"guest\">\n            <LoginComponent />\n          </AuthRoute>\n          <AuthRoute exact path=\"/register\" type=\"guest\">\n            <RegisterComponent />\n          </AuthRoute>\n          <Segment raised style={{maxWidth: 1000, margin: '0 auto'}}>\n\n          <AuthRoute exact path=\"/home\" component={BoardsPage} type=\"private\" />\n          <AuthRoute exact path=\"/board/:boardId\" component={BoardDetail} type=\"private\" />\n          <AuthRoute exact path=\"/addboard\" component={AddBoardPage} type=\"private\" />\n          <AuthRoute exact path=\"/editboard\" component={EditBoardPage} type=\"private\" />\n          <AuthRoute exact path=\"/editlist\" component={EditListPage} type=\"private\" />\n          <AuthRoute exact path=\"/addlist/:boardId\" render={(props) => <AddListPage {...props} /> } type=\"private\" />\n          <AuthRoute exact path=\"/addcard/:boardId/:listId\" render={(props) => <AddCardPage {...props} /> } type=\"private\" />\n          <AuthRoute exact path=\"/editcard/:cardId\" render={(props) => <EditCardPage {...props} /> } type=\"private\" />\n          </Segment>\n\n        </Switch>\n        </Container>\n        <Footer />\n      </Router>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userReducer: state.userReducer\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    autoLogin: () => dispatch(autoLogin())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import * as actions from '../actions/boardsActions';\n\nexport const initialState = {\n  boards: [],\n  loading: false,\n  hasErrors: false,\n}\n\nexport default function boardsReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.GET_BOARDS:\n      return { ...state, loading: true }\n    case actions.GET_BOARDS_SUCCESS:\n      return { boards: action.payload, loading: false, hasErrors: false }\n    case actions.GET_BOARDS_FAILURE:\n      return { ...state, loading: false, hasErrors: true }\n    default:\n      return state\n  }\n}\n","const defaultState = {\n  loggedIn: false,\n  user: {}\n}\n\nconst userReducer = (state = defaultState, action) => {\n  switch(action.type){\n      case \"SET_USER\":\n          return {\n              loggedIn: true,\n              user: {...action.payload}\n          }\n      case \"LOG_OUT\":\n          localStorage.clear()\n          return {\n              loggedIn: false,\n              user: {}\n          }\n      default: return state\n  }\n}\n\nexport default userReducer","import * as actions from '../actions/oneBoardActions';\n\nexport const initialState = {\n  board: {},\n  loading: false,\n  hasErrors: false,\n}\n\nexport default function oneBoardReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.GET_ONE_BOARD:\n      return { ...state, loading: true }\n    case actions.GET_ONE_BOARD_SUCCESS:\n      return { board: action.payload, loading: false, hasErrors: false }\n    case actions.GET_ONE_BOARD_FAILURE:\n      return { ...state, loading: false, hasErrors: true }\n    default:\n      return state\n  }\n}\n","import {combineReducers} from 'redux'\n\nimport boardsReducer from './boardsReducer'\nimport listsReducer from './listsReducer'\nimport cardsReducer from './cardsReducer'\nimport userReducer from './userReducer'\nimport oneBoardReducer from './oneBoardReducer'\n\nconst rootReducer = combineReducers({\n  boards: boardsReducer,\n  oneBoard: oneBoardReducer,\n  lists: listsReducer,\n  cards: cardsReducer,\n  userReducer,\n})\n\nexport default rootReducer","// external imports\nimport React from 'react';\nimport {render} from 'react-dom'\nimport {createStore, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\n// local imports\nimport App from './App';\nimport rootReducer from './reducers/index'\n\n// assets\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css'\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}