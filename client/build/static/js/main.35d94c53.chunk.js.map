{"version":3,"sources":["actions/userActions.js","components/Navbar.jsx","components/Footer.jsx","components/Board.jsx","pages/BoardsPage.js","actions/boardsActions.js","components/CardComponent.jsx","components/List.jsx","components/BoardDetail.jsx","actions/oneBoardActions.js","pages/AddBoardPage.jsx","pages/EditBoardPage.jsx","pages/AddListPage.jsx","pages/EditListPage.jsx","pages/AddCardPage.jsx","pages/EditCardPage.jsx","components/LoginComponent.jsx","components/RegisterComponent.jsx","components/AuthRoute.jsx","App.js","reducers/boardsReducer.js","reducers/userReducer.js","reducers/oneBoardReducer.js","reducers/index.js","index.js"],"names":["setUser","payload","type","Navbar","state","activeItem","handleItemClick","e","name","setState","logoutHandler","preventDefault","props","logUserOut","this","Segment","Menu","pointing","secondary","size","Item","userReducer","loggedIn","as","NavLink","to","active","onClick","Component","connect","dispatch","Footer","inverted","vertical","style","margin","padding","Container","textAlign","Grid","divided","stackable","Column","width","Header","content","Divider","section","List","horizontal","link","href","Icon","Board","board","Card","Content","Button","Group","color","pathname","boardId","_id","loading","boards","hasErrors","useEffect","a","token","localStorage","getItem","axios","get","process","headers","response","console","log","data","allBoards","marginBottom","user","username","itemsPerRow","map","i","key","CardComponent","card","Popup","trigger","circular","height","marginLeft","flowing","hoverable","centered","columns","icon","Link","list","raised","fluid","title","floated","widths","listId","hidden","marginTop","cards","oneBoard","useParams","fetchOneBoard","padded","Row","lists","length","AddBoardPage","description","status","changeHandler","target","value","submitHandler","post","then","res","catch","err","className","Form","onSubmit","Field","placeholder","onChange","EditBoardPage","location","put","AddListPage","match","params","EditListPage","AddCardPage","EditCardPage","cardId","LoginComponent","email","password","handleOnChange","persist","fetchUser","React","userInfo","setItem","SignUpComponent","confirmPassword","signUserUp","App","autoLogin","exact","path","RegisterComponent","component","BoardsPage","BoardDetail","render","decode","removeItem","initialState","defaultState","action","clear","rootReducer","combineReducers","listsReducer","cardsReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","document","getElementById"],"mappings":"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","file":"static/js/main.35d94c53.chunk.js","sourcesContent":["import axios from 'axios';\nimport { decode } from \"jsonwebtoken\";\n\nconst URL = \"\";\n\n// Create Redux action creators\nexport const setUser = (payload) => ({ type: \"SET_USER\", payload });\nexport const logUserOut = () => ({ type: \"LOG_OUT\" });\n\n// Create Redux methods\n// log in\nexport const fetchUser = (userInfo) => dispatch => {\n  axios.post(`${URL}/auth/login`, userInfo)\n  .then((res) =>{\n    //console.log(res.data);\n    \n\n    localStorage.setItem(\"token\", res.data.token)\n    dispatch(setUser(res.data.user))\n  })\n}\n\n// register\nexport const signUserUp = (userInfo) => dispatch => {\n  axios.post(`${URL}/auth/register`, userInfo)\n  .then((res) =>{\n    console.log(res.data);\n\n    localStorage.setItem(\"token\", res.data.token)\n    dispatch(setUser(res.data.user))\n  })\n}\n\n// auto login if token exists\nexport const autoLogin = () => dispatch => {\n  let token = localStorage.getItem(\"token\");\n\n    // if token exists\n    if (!(token == null)) {\n      let decodedToken = decode(token);\n\n      if (!decodedToken) {\n        localStorage.removeItem(\"token\");\n      } else {\n        \n        axios.get(`${URL}/auth/autologin`, {\n          headers: {\n            \"x-auth-token\": token,\n          },\n        })\n          .then((res) => {\n            console.log(res.data);\n            dispatch(setUser(res.data.user))\n          })\n          .catch((err) => {\n            console.log(err);\n            \n          });\n        \n      }\n    }\n}\n\n","import React, { Component } from 'react'\nimport { Menu, Segment } from 'semantic-ui-react'\nimport { NavLink } from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {logUserOut} from '../actions/userActions'\n\n\nclass Navbar extends Component {\n  state = { activeItem: '' }\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  logoutHandler = (e) => {\n    e.preventDefault()\n    this.props.logUserOut()\n  }\n\n  render() {\n    const { activeItem } = this.state\n\n    return (\n      <Segment>\n        <Menu pointing secondary size=\"massive\">\n          <Menu.Item>DORA</Menu.Item>\n          {!this.props.userReducer.loggedIn ?  \n          <Menu.Item\n          as={NavLink} to=\"/login\"\n          name='log in'\n          active={activeItem === 'log in'}\n          onClick={this.handleItemClick}\n        />\n        : \n          <Menu.Item\n          as={NavLink} to=\"/home\"\n          name='home'\n          active={activeItem === 'home'}\n          onClick={this.handleItemClick}\n          />\n          }\n\n          {!this.props.userReducer.loggedIn ?  \n          <Menu.Item\n          as={NavLink} to=\"/register\"\n          name='register'\n          active={activeItem === 'register'}\n          onClick={this.handleItemClick}\n        />\n          : \n          <Menu.Item\n          as={NavLink} to=\"/logout\"\n          name='logout'\n          active={activeItem === 'logout'}\n          onClick={this.logoutHandler}\n          />\n          }\n          \n        </Menu>\n      </Segment>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userReducer: state.userReducer\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      logUserOut: () => dispatch(logUserOut())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","import React from 'react'\nimport {\n  Container,\n  Divider,\n  Grid,\n  Header,\n  List,\n  Segment,\n  Icon\n} from 'semantic-ui-react'\n\nconst Footer = () => (\n  <div>\n    <Segment inverted vertical style={{ margin: '5em 0em 0em', padding: '5em 0em' }}>\n      <Container textAlign='center'>\n        <Grid divided inverted stackable>\n          \n          <Grid.Column width={16}>\n            <Header inverted as='h4' content='DORA' />\n            <p>\n              made for explorers 🤍\n            </p>\n          </Grid.Column>\n        </Grid>\n\n        <Divider inverted section />\n        <List horizontal inverted divided link size='small'>\n          <List.Item as='a' href='https://github.com/joeyqlim/'>\n            <Icon name='github' size='big' />\n          </List.Item>\n        </List>\n      </Container>\n    </Segment>\n  </div>\n)\n\nexport default Footer","import React from 'react'\nimport { Card, Button, Icon, Divider } from 'semantic-ui-react'\nimport { Link } from \"react-router-dom\";\n\n\nexport const Board = ({ board }) => (\n  <Card>\n    <Card.Content textAlign=\"center\" >\n      <Card.Header content={board.name} />\n      <Divider />\n      <Icon name='travel' size='large' />\n\n    </Card.Content>\n    <Button.Group>\n      <Button color='violet'>\n        <Link \n          to={{\n            pathname: `/editboard`,\n            state: {\n              name: board.name,\n              boardId: board._id\n            }\n            }}>\n        Edit <Icon name='edit' />\n        </Link>\n      </Button>\n      <Button color='teal'><Link to={`/board/${board._id}`}>View <Icon name='eye' /></Link></Button>\n    </Button.Group>\n  </Card>\n  \n  \n)","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from \"react-router-dom\";\n\nimport { fetchBoards } from '../actions/boardsActions';\nimport { Board } from '../components/Board';\n\nimport { Card, Container, Divider, Icon, Button } from 'semantic-ui-react'\n\nconst BoardsPage = ({ dispatch, loading, boards, hasErrors, userReducer }) => {\n  useEffect(() => {\n    dispatch(fetchBoards())\n  }, [dispatch]);\n\n  // Show loading, error or success state\n  const renderBoards = () => {\n    if (loading) return <p>Loading boards...</p>\n    if (hasErrors) return <p>Unable to display boards</p>\n    return boards.map((board, i) => <Board key={i} board={board} />)\n  }\n\n  return (\n    <Container style={{ marginBottom: '3em' }}>\n    {!userReducer.loggedIn ? \"\" : <h1>Welcome, {userReducer.user.username}</h1>}\n      <h1>Boards</h1>\n      <Card.Group itemsPerRow={4}>\n        {renderBoards()}\n        <Card>\n        <Card.Content textAlign=\"center\" >\n          <Card.Header content=\"New board\" />\n          <Divider />\n          <Icon name='add' size='large' />\n\n        </Card.Content>\n        <Button color='green'><Link to=\"/addboard\">Add Board <Icon name='add' /></Link></Button>\n      </Card>\n      </Card.Group>\n    </Container>\n  )\n}\n\n// Map Redux state to React component props\nconst mapStateToProps = (state) => ({\n  loading: state.boards.loading,\n  boards: state.boards.boards,\n  hasErrors: state.boards.hasErrors,\n  userReducer: state.userReducer\n})\n\nexport default connect(mapStateToProps)(BoardsPage)","import axios from 'axios';\n\nconst URL = process.env.REACT_APP_URL;\n\n// Create Redux action types\nexport const GET_BOARDS = 'GET_BOARDS'\nexport const GET_BOARDS_SUCCESS = 'GET_BOARDS_SUCCESS'\nexport const GET_BOARDS_FAILURE = 'GET_BOARDS_FAILURE'\n\n// Create Redux action creators that return an action\nexport const getBoards = () => ({\n  type: GET_BOARDS,\n})\n\nexport const getBoardsSuccess = (boards) => ({\n  type: GET_BOARDS_SUCCESS,\n  payload: boards,\n})\n\nexport const getBoardsFailure = () => ({\n  type: GET_BOARDS_FAILURE,\n})\n\n// fetch all boards\nexport function fetchBoards() {\n  return async (dispatch) => {\n    dispatch(getBoards());\n    let token = localStorage.getItem(\"token\");\n\n    try {\n      const response = await axios.get(`${URL}/board/all`, {\n        headers: {\n          'x-auth-token' : token\n        }\n      });\n      console.log(response.data)\n\n      dispatch(getBoardsSuccess(response.data.allBoards.boards));\n\n    } catch (error) {\n      dispatch(getBoardsFailure());\n    }\n  }\n}\n","import React from 'react';\nimport { Segment, Button, Popup, Grid } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\n\nfunction CardComponent({card, boardId}) {\n  const square = { width: 135, height: 135, marginLeft: \"1em\" }\n  return (  \n\n    <Popup trigger={\n      <Segment circular style={square} inverted color='teal'>\n      {card.content}<br />\n      </Segment>\n    } flowing hoverable size='mini'>\n    <Grid centered divided columns={2}>\n      <Grid.Column textAlign='center'>\n        <Button color=\"blue\" icon=\"edit\" size='mini' as={Link} \n        to={{\n          pathname: `/editcard/${card._id}`,\n          state: {\n            content: card.content,\n            boardId\n          }\n          }}/>\n      </Grid.Column>\n      <Grid.Column textAlign='center'>\n        <Button color=\"red\" icon=\"delete\" size='mini' />\n      </Grid.Column>\n    </Grid>\n    </Popup>\n  );\n}\n\nexport default CardComponent;\n","import React from 'react';\nimport { Card, Segment, Divider, Icon, Button, Popup } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\n\nimport CardComponent from './CardComponent'\n\nfunction List({list}) {\n  const square = { width: 135, height: 135, marginTop: \"1em\", marginBottom: \"1.5em\", marginLeft: \"1.5em\" }\n\n  const renderLists = () => {\n    return list.cards.map((card, i) => (\n      <CardComponent key={i} card={card} boardId={list.board}/>\n    ))\n  }\n  return (\n      <>\n      <Segment color='teal' raised fluid style={{ padding: '1em' }}>\n        <h3>{list.title}</h3> \n        <Button.Group floated='right' vertical widths='1'>\n        <Popup content='Delete this list' trigger={<Button color='red' icon='delete' />} />\n        <Popup content='Edit this list' trigger={\n          <Button \n            color='blue' \n            icon='edit'\n            as={Link} \n            to={{\n              pathname: `/editlist`,\n              state: {\n                title: list.title,\n                boardId: list.board,\n                listId: list._id\n              }\n              }}\n            />\n            } />\n\n      </Button.Group>\n        <Divider hidden />\n          <Card.Group itemsPerRow={6}>\n          <Segment circular style={square} inverted color='yellow' as={Link} \n            to={{\n              pathname: `/addcard/${list.board}/${list._id}`\n              }}>\n            Add an activity<br/><Icon name='add' />\n          </Segment>\n          {renderLists()}\n          </Card.Group>\n      </Segment>      \n      <Divider />\n      </>\n  );\n}\n\nexport default List;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams, Link } from 'react-router-dom';\nimport { Grid, Card, Container, Button, Icon } from 'semantic-ui-react'\nimport { fetchOneBoard } from '../actions/oneBoardActions';\n\nimport List from './List';\n\nconst BoardDetail = ({ dispatch, loading, board, hasErrors }) => {\n  const { boardId } = useParams();\n  useEffect(() => {\n    dispatch(fetchOneBoard(boardId))\n  }, [dispatch, boardId]);\n\n  // Show loading, error or success state\n  const renderBoardDetail = () => {\n    if (loading) return <p>Loading boards...</p>\n    if (hasErrors) return <p>Unable to display boards</p>\n    if (board.lists) {\n      if (board.lists.length > 0) {\n        return board.lists.map((list, i) => (\n          <List key={i} list={list} />\n        ))\n      } else {\n        return <h3>No lists in this board yet. Create one?</h3>\n      }\n    } \n  }\n\n  // fetch all lists in this board\n  // render each list into a list component\n  return (\n    <Grid padded divided='vertically' style={{ margin: '.1em .1em 3em .1em' }}>\n      <h2>{board.name}</h2>\n      <Container>\n      <Grid.Row>\n      {renderBoardDetail()}\n      <Card fluid={true}>\n        <Card.Content textAlign=\"center\" >\n          <Card.Header content=\"Add a new list to this board\" />\n        </Card.Content>\n        <Button color='green'><Link to={`/addlist/${board._id}`}>Add List <Icon name='add' /></Link></Button>\n      </Card>\n      </Grid.Row>\n    </Container>\n    </Grid>\n  );\n}\n\n// Map Redux state to React component props\nconst mapStateToProps = (state) => ({\n  loading: state.oneBoard.loading,\n  board: state.oneBoard.board,\n  hasErrors: state.oneBoard.hasErrors,\n  userReducer: state.userReducer\n})\n\nexport default connect(mapStateToProps)(BoardDetail);\n","import axios from 'axios';\n\nconst URL = process.env.REACT_APP_URL;\n\nexport const GET_ONE_BOARD = 'GET_ONE_BOARD'\nexport const GET_ONE_BOARD_SUCCESS = 'GET_ONE_BOARD_SUCCESS'\nexport const GET_ONE_BOARD_FAILURE = 'GET_ONE_BOARD_FAILURE'\n\nexport const getOneBoard = () => ({\n  type: GET_ONE_BOARD,\n})\n\nexport const getOneBoardSuccess = (board) => ({\n  type: GET_ONE_BOARD_SUCCESS,\n  payload: board,\n})\n\nexport const getOneBoardFailure = () => ({\n  type: GET_ONE_BOARD_FAILURE,\n})\n\n// fetch one board\nexport function fetchOneBoard(boardId) {\n  return async (dispatch) => {\n    dispatch(getOneBoard());\n    let token = localStorage.getItem(\"token\");\n\n    try {\n      const response = await axios.get(`${URL}/board/${boardId}`, {\n        headers: {\n          'x-auth-token' : token\n        }\n      });\n      console.log(response.data.board)\n\n      dispatch(getOneBoardSuccess(response.data.board));\n\n    } catch (error) {\n      dispatch(getOneBoardFailure());\n    }\n  }\n}","import React, { Component } from \"react\";\nimport { Container, Form, Button, Grid } from 'semantic-ui-react'\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst URL = process.env.REACT_APP_URL;\nclass AddBoardPage extends Component {\n  state = {\n    name: \"\",\n    description: \"\",\n    status: false,\n  };\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = () => {\n    let token = localStorage.getItem(\"token\");\n\n    axios.post(`${URL}/board/new`, this.state, {\n      headers: {\n        'x-auth-token' : token\n      }\n    })\n      .then((res) => {\n        console.log(\"done\");\n        this.setState({ status: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    if (this.state.status) {\n      return <Redirect to=\"/home\" />;\n    }\n\n    return (\n      <Container>\n      <Grid className=\"centered\">\n      <Grid.Row>\n        <Grid.Column width={5}>\n          <h1>New Board</h1>\n          <Form onSubmit={this.submitHandler}>\n            <Form.Field>\n            <input \n                type=\"text\" \n                name=\"name\" \n                placeholder=\"Board name\" \n                value={this.state.name}\n                onChange={this.changeHandler}\n            />\n            </Form.Field>\n\n            <Form.Field>\n            <input\n                type=\"text\"\n                name=\"description\"\n                placeholder=\"Description\"\n                value={this.state.description}\n                onChange={this.changeHandler}\n            />\n            </Form.Field>\n            <Button type=\"submit\" color=\"olive\">Create new board</Button>  \n          </Form>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n    </Container>\n    );\n  }\n}\n\nexport default AddBoardPage;","import React, { Component } from \"react\";\nimport { Container, Form, Button, Grid } from 'semantic-ui-react'\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst URL = process.env.REACT_APP_URL;\nclass EditBoardPage extends Component {\n  state = {\n    name: this.props.location.state.name,\n    boardId: this.props.location.state.boardId,\n    // description\n    status: false,\n  };\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = () => {\n    let token = localStorage.getItem(\"token\");\n\n    axios.put(`${URL}/board/${this.state.boardId}`, this.state, {\n      headers: {\n        'x-auth-token' : token\n      }\n    })\n      .then((res) => {\n        console.log(\"done\");\n        this.setState({ status: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    if (this.state.status) {\n      return <Redirect to=\"/home\" />;\n    }\n\n    return (\n      <Container>\n      <Grid className=\"centered\">\n      <Grid.Row>\n        <Grid.Column width={5}>\n          <h1>Edit Board</h1>\n          <Form onSubmit={this.submitHandler}>\n            <Form.Field>\n            <input \n                type=\"text\" \n                name=\"name\" \n                placeholder=\"Board name\" \n                value={this.state.name}\n                onChange={this.changeHandler}\n            />\n            </Form.Field>\n\n            <Form.Field>\n            <input\n                type=\"text\"\n                name=\"description\"\n                placeholder=\"Description\"\n                value={this.state.description}\n                onChange={this.changeHandler}\n            />\n            </Form.Field>\n            <Button type=\"submit\" color=\"olive\">Save changes</Button>  \n          </Form>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n    </Container>\n    );\n  }\n}\n\nexport default EditBoardPage;","import React, { Component } from \"react\";\nimport { Container, Form, Button, Grid } from 'semantic-ui-react'\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst URL = process.env.REACT_APP_URL;\nclass AddListPage extends Component {\n  state = {\n    title: \"\",\n    status: false,\n  };\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = () => {\n    let token = localStorage.getItem(\"token\");\n\n    axios.post(`${URL}/list/${this.props.match.params.boardId}/new`, this.state, {\n      headers: {\n        'x-auth-token' : token\n      }\n    })\n      .then((res) => {\n        console.log(\"done\");\n        this.setState({ status: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    if (this.state.status) {\n      return <Redirect to={`/board/${this.props.match.params.boardId}`} />;\n    }\n    console.log(this.props.match.params.boardId)\n\n    return (\n      <Container>\n      <Grid className=\"centered\">\n      <Grid.Row>\n        <Grid.Column width={5}>\n          <h1>New List</h1>\n          <Form onSubmit={this.submitHandler}>\n            <Form.Field>\n            <input \n                type=\"text\" \n                name=\"title\" \n                placeholder=\"List title\" \n                value={this.state.title}\n                onChange={this.changeHandler}\n            />\n            </Form.Field>\n\n            <Button type=\"submit\">Add list to board</Button>  \n          </Form>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n    </Container>\n    );\n  }\n}\n\nexport default AddListPage;","import React, { Component } from \"react\";\nimport { Container, Form, Button, Grid } from 'semantic-ui-react'\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst URL = process.env.REACT_APP_URL;\nclass EditListPage extends Component {\n  state = {\n    title: this.props.location.state.title,\n    boardId: this.props.location.state.boardId,\n    listId: this.props.location.state.listId,\n    status: false,\n  };\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = () => {\n    let token = localStorage.getItem(\"token\");\n\n    axios.put(`${URL}/list/${this.state.listId}`, this.state, {\n      headers: {\n        'x-auth-token' : token\n      }\n    })\n      .then((res) => {\n        console.log(\"done\");\n        this.setState({ status: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    if (this.state.status) {\n      return <Redirect to={`/board/${this.state.boardId}`} />;\n    }\n\n    return (\n      <Container>\n      <Grid className=\"centered\">\n      <Grid.Row>\n        <Grid.Column width={5}>\n          <h1>Edit List</h1>\n          <Form onSubmit={this.submitHandler}>\n            <Form.Field>\n            <input \n                type=\"text\" \n                name=\"title\" \n                placeholder=\"List title\" \n                value={this.state.title}\n                onChange={this.changeHandler}\n            />\n            </Form.Field>\n\n            <Button type=\"submit\" color=\"olive\">Save changes</Button>  \n          </Form>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n    </Container>\n    );\n  }\n}\n\nexport default EditListPage;","import React, { Component } from \"react\";\nimport { Container, Form, Button, Grid } from 'semantic-ui-react'\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst URL = process.env.REACT_APP_URL;\nclass AddCardPage extends Component {\n  state = {\n    content: \"\",\n    status: false,\n  };\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = () => {\n    let token = localStorage.getItem(\"token\");\n\n    axios.post(`${URL}/card/${this.props.match.params.listId}/new`, this.state, {\n      headers: {\n        'x-auth-token' : token\n      }\n    })\n      .then((res) => {\n        console.log(\"done\");\n        this.setState({ status: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    if (this.state.status) {\n      return <Redirect to={`/board/${this.props.match.params.boardId}`} />;\n    }\n    console.log(this.props)\n\n    return (\n      <Container>\n      <Grid className=\"centered\">\n      <Grid.Row>\n        <Grid.Column width={5}>\n          <h1>New Card</h1>\n          <Form onSubmit={this.submitHandler}>\n            <Form.Field>\n            <input \n                type=\"text\" \n                name=\"content\" \n                placeholder=\"Content\" \n                value={this.state.content}\n                onChange={this.changeHandler}\n            />\n            </Form.Field>\n\n            <Button type=\"submit\" color=\"olive\">Add card to list</Button>  \n          </Form>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n    </Container>\n    );\n  }\n}\n\nexport default AddCardPage;","import React, { Component } from \"react\";\nimport { Container, Form, Button, Grid } from 'semantic-ui-react'\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst URL = process.env.REACT_APP_URL;\nclass EditCardPage extends Component {\n  state = {\n    content: this.props.location.state.content,\n    boardId: this.props.location.state.boardId,\n    status: false,\n  };\n  \n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = () => {\n    let token = localStorage.getItem(\"token\");\n\n    axios.put(`${URL}/card/${this.props.match.params.cardId}`, this.state, {\n      headers: {\n        'x-auth-token' : token\n      }\n    })\n      .then((res) => {\n        console.log(\"done\");\n        this.setState({ status: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    if (this.state.status) {\n      return <Redirect to={`/board/${this.state.boardId}`} />;\n    }\n\n    return (\n      <Container>\n      <Grid className=\"centered\">\n      <Grid.Row>\n        <Grid.Column width={5}>\n          <h1>New Card</h1>\n          <Form onSubmit={this.submitHandler}>\n            <Form.Field>\n            <input \n                type=\"text\" \n                name=\"content\" \n                placeholder=\"Content\" \n                value={this.state.content}\n                onChange={this.changeHandler}\n            />\n            </Form.Field>\n\n            <Button type=\"submit\" color=\"olive\">Add card to list</Button>  \n          </Form>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n    </Container>\n    );\n  }\n}\n\nexport default EditCardPage;","import React from 'react'\nimport {connect} from 'react-redux'\nimport {fetchUser} from '../actions/userActions'\n\nimport { Container, Form, Button, Grid } from 'semantic-ui-react'\n\nclass LoginComponent extends React.Component {\n    state = {\n        email: \"\",\n        password: \"\"\n    }\n\n    handleOnChange = (e) => {\n        e.persist();\n        this.setState(() => ({\n            [e.target.name]: e.target.value \n        }))\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        this.props.fetchUser(this.state)\n    }\n\n    render(){\n        return(\n            <Container>\n                <Grid className=\"centered\">\n                <Grid.Row>\n                    <Grid.Column width={5}>\n                        <h1>Log In</h1>\n                        <Form onSubmit={this.onSubmit}>\n                            <Form.Field>\n                            <input \n                                type=\"text\" \n                                name=\"email\" \n                                placeholder=\"Email\" \n                                value={this.state.email}\n                                onChange={this.handleOnChange}\n                            />\n                            </Form.Field>\n\n                            <Form.Field>\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                value={this.state.password}\n                                onChange={this.handleOnChange}\n                            />\n                            </Form.Field>\n                            <Button type=\"submit\">Log In</Button>\n                            \n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            </Container>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchUser: (userInfo) => dispatch(fetchUser(userInfo))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(LoginComponent)","import React from 'react'\nimport {connect} from 'react-redux'\nimport {signUserUp} from '../actions/userActions'\n\nimport { Container, Form, Button, Grid } from 'semantic-ui-react'\n\nclass SignUpComponent extends React.Component {\n    state = {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n    }\n\n    handleOnChange = (e) => {\n        e.persist();\n        this.setState(() => ({\n            [e.target.name]: e.target.value \n        }))\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault()\n        this.props.signUserUp(this.state)\n    }\n\n    render(){\n        return(\n            <Container>\n                <Grid className=\"centered\">\n                <Grid.Row>\n                    <Grid.Column width={5}>\n                        <h1>Register</h1>\n                        <Form onSubmit={this.onSubmit}>\n                            <Form.Field>\n                            <input \n                                type=\"text\" \n                                name=\"username\" \n                                placeholder=\"Username\" \n                                value={this.state.username}\n                                onChange={this.handleOnChange}\n                            />\n                            </Form.Field>\n\n                            <Form.Field>\n                            <input \n                                type=\"text\" \n                                name=\"email\" \n                                placeholder=\"Email\" \n                                value={this.state.email}\n                                onChange={this.handleOnChange}\n                            />\n                            </Form.Field>\n\n                            <Form.Field>\n                            <input\n                                type=\"password\"\n                                name=\"password\"\n                                placeholder=\"Password\"\n                                value={this.state.password}\n                                onChange={this.handleOnChange}\n                            />\n                            </Form.Field>\n\n                            <Form.Field>\n                            <input\n                                type=\"password\"\n                                name=\"confirmPassword\"\n                                placeholder=\"Confirm Password\"\n                                value={this.state.confirmPassword}\n                                onChange={this.handleOnChange}\n                            />\n                            </Form.Field>\n                            <Button type=\"submit\">Register</Button>\n                            \n                        </Form>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n            </Container>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUserUp: (userInfo) => dispatch(signUserUp(userInfo))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignUpComponent)","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\n\nconst AuthRoute = props => {\n  const { userReducer, type } = props;\n  //console.log(props)\n  if (type === \"guest\" && userReducer.loggedIn) {\n    return <Redirect to=\"/home\" />;\n  } else if (type === \"private\" && !userReducer.loggedIn) {\n    return <Redirect to=\"/login\" />;\n  } \n\n  return <Route {...props} />;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    userReducer: state.userReducer\n  }\n}\n\nexport default connect(mapStateToProps)(AuthRoute);","import React, { Component } from 'react'\nimport {BrowserRouter as Router, Switch } from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nimport Navbar from './components/Navbar'\nimport Footer from './components/Footer'\nimport BoardsPage from './pages/BoardsPage'\nimport BoardDetail from './components/BoardDetail'\nimport AddBoardPage from './pages/AddBoardPage'\nimport EditBoardPage from './pages/EditBoardPage'\nimport AddListPage from './pages/AddListPage'\nimport EditListPage from './pages/EditListPage'\nimport AddCardPage from './pages/AddCardPage'\nimport EditCardPage from './pages/EditCardPage'\nimport LoginComponent from './components/LoginComponent'\nimport RegisterComponent from './components/RegisterComponent'\nimport AuthRoute from './components/AuthRoute'\nimport {autoLogin} from './actions/userActions'\n\nimport { Container, Segment } from 'semantic-ui-react'\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.autoLogin();\n  }\n\n  render() {\n    return (\n      <Router>\n        <Navbar />\n        <Container style={{ marginBottom: '10em', marginTop: '3em' }}>\n        <Segment>\n        <Switch>\n          <AuthRoute exact path=\"/\" type=\"guest\">\n            <LoginComponent />\n          </AuthRoute>\n          <AuthRoute exact path=\"/login\" type=\"guest\">\n            <LoginComponent />\n          </AuthRoute>\n          <AuthRoute exact path=\"/register\" type=\"guest\">\n            <RegisterComponent />\n          </AuthRoute>\n\n          <AuthRoute exact path=\"/home\" component={BoardsPage} type=\"private\" />\n          <AuthRoute exact path=\"/board/:boardId\" component={BoardDetail} type=\"private\" />\n          <AuthRoute exact path=\"/addboard\" component={AddBoardPage} type=\"private\" />\n          <AuthRoute exact path=\"/editboard\" component={EditBoardPage} type=\"private\" />\n          <AuthRoute exact path=\"/editlist\" component={EditListPage} type=\"private\" />\n          <AuthRoute exact path=\"/addlist/:boardId\" render={(props) => <AddListPage {...props} /> } type=\"private\" />\n          <AuthRoute exact path=\"/addcard/:boardId/:listId\" render={(props) => <AddCardPage {...props} /> } type=\"private\" />\n          <AuthRoute exact path=\"/editcard/:cardId\" render={(props) => <EditCardPage {...props} /> } type=\"private\" />\n\n        </Switch>\n        </Segment>\n        </Container>\n        <Footer />\n      </Router>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userReducer: state.userReducer\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    autoLogin: () => dispatch(autoLogin())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import * as actions from '../actions/boardsActions';\n\nexport const initialState = {\n  boards: [],\n  loading: false,\n  hasErrors: false,\n}\n\nexport default function boardsReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.GET_BOARDS:\n      return { ...state, loading: true }\n    case actions.GET_BOARDS_SUCCESS:\n      return { boards: action.payload, loading: false, hasErrors: false }\n    case actions.GET_BOARDS_FAILURE:\n      return { ...state, loading: false, hasErrors: true }\n    default:\n      return state\n  }\n}\n","const defaultState = {\n  loggedIn: false,\n  user: {}\n}\n\nconst userReducer = (state = defaultState, action) => {\n  switch(action.type){\n      case \"SET_USER\":\n          return {\n              loggedIn: true,\n              user: {...action.payload}\n          }\n      case \"LOG_OUT\":\n          localStorage.clear()\n          return {\n              loggedIn: false,\n              user: {}\n          }\n      default: return state\n  }\n}\n\nexport default userReducer","import * as actions from '../actions/oneBoardActions';\n\nexport const initialState = {\n  board: {},\n  loading: false,\n  hasErrors: false,\n}\n\nexport default function oneBoardReducer(state = initialState, action) {\n  switch (action.type) {\n    case actions.GET_ONE_BOARD:\n      return { ...state, loading: true }\n    case actions.GET_ONE_BOARD_SUCCESS:\n      return { board: action.payload, loading: false, hasErrors: false }\n    case actions.GET_ONE_BOARD_FAILURE:\n      return { ...state, loading: false, hasErrors: true }\n    default:\n      return state\n  }\n}\n","import {combineReducers} from 'redux'\n\nimport boardsReducer from './boardsReducer'\nimport listsReducer from './listsReducer'\nimport cardsReducer from './cardsReducer'\nimport userReducer from './userReducer'\nimport oneBoardReducer from './oneBoardReducer'\n\nconst rootReducer = combineReducers({\n  boards: boardsReducer,\n  oneBoard: oneBoardReducer,\n  lists: listsReducer,\n  cards: cardsReducer,\n  userReducer,\n})\n\nexport default rootReducer","// external imports\nimport React from 'react';\nimport {render} from 'react-dom'\nimport {createStore, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\n// local imports\nimport App from './App';\nimport rootReducer from './reducers/index'\n\n// assets\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css'\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}